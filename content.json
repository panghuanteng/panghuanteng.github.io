{"meta":{"title":"庞欢腾的博客","subtitle":"我会在这里发布最新动态","description":"永不安于现状","author":"panghuanteng","url":"https://panghuanteng.github.io","root":"/"},"pages":[{"title":"categories","date":"2023-02-19T05:48:39.000Z","updated":"2023-02-19T08:26:42.255Z","comments":true,"path":"categories/index.html","permalink":"https://panghuanteng.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-02-18T10:17:41.000Z","updated":"2023-02-19T08:26:35.889Z","comments":true,"path":"tags/index.html","permalink":"https://panghuanteng.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Java使用freemarker制作word文档完整笔记","slug":"Java使用freemarker制作word文档完整笔记","date":"2023-03-07T08:56:25.000Z","updated":"2023-03-07T09:23:04.502Z","comments":true,"path":"2023/03/07/Java使用freemarker制作word文档完整笔记/","link":"","permalink":"https://panghuanteng.github.io/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/","excerpt":"","text":"freemarker模板引擎 1、创建一个maven项目 2、添加pom.xml依赖 1234&lt;dependency&gt; &lt;groupId&gt;org.freemarker&lt;/groupId&gt; &lt;artifactId&gt;freemarker&lt;/artifactId&gt;&lt;/dependency&gt; 3、添加配置文件 方法1（推荐这种配置）： 也可以在bootstrp.yml配置文件里添加配置 123freemarker: suffix: .ftl template-loader-path: classpath:/staticftl 注意：需要注意缩进 方法2： setTemplateLoaderPath 参数是指定我们定义好的模板存放目录 代码： 123456789101112131415161718192021222324package com.hxkj.server.api.haiyangserver.config;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer;import java.util.HashMap;import java.util.Map;/** * @Author pht * @Description word模板配置 * @Date 2021/6/24 **/@Configurationpublic class ApplicationConfig &#123; @Bean(name = &quot;freeMarkerConfigurer&quot;) public FreeMarkerConfigurer freeMarkerConfigurer() &#123; FreeMarkerConfigurer configurer = new FreeMarkerConfigurer(); configurer.setDefaultEncoding(&quot;UTF-8&quot;); configurer.setTemplateLoaderPath(&quot;classpath:/staticftl&quot;); Map&lt;String, Object&gt; variables = new HashMap&lt;&gt;(); variables.put(&quot;xml_escape&quot;, &quot;fmXmlEscape&quot;); configurer.setFreemarkerVariables(variables); return configurer; &#125;&#125; 4、模板制作 4.1 拿到原始模板文件 上图是一个word文件，框选的区域内容是需要程序动态填充的。然后需要整理模板格式，根据模板需要定义替换符关键字。 4.2 建立替换占位符号 创建一个txt文件 123456789101112制作人$&#123;producer&#125;：悟空制作日期$&#123;cdate&#125;:2021年11月22日分析区域$&#123;area1&#125;:河北省(市)$&#123;area2&#125;:东海海域分析月份$&#123;month&#125;:7—8 把对应需要动态替换值的位置填充上关键字，并把黄色的标注去掉 如果有图片，需要把图片插入并调整好位置。图片的替换关键字在转换成xml后做。 替换完成word文件里的占位符后，结果如下 模板文档中${}是占位符，即生成Word文档时占位符会被真实的数据替换。例如${name}在生成文档时会被name这个属性的值替换 ，${userObj.name}在生成文档时会被userObj这个对象的name属性的值替换。 4.3 将.doc文档另存为.xml文件 把word文档转成xml文件 另存为，选择xml格式 使用notepad++打开xml模板 首先格式化，需要添加xml插件 注意：另存为时选择Word2003XML文档(*.xml) 使用notepad++编辑工具打开这个xml文件 你会发现里面都是一些看不懂的乱码 此时不要慌 打开效果： 安装一个插件 使用这个插件对xml文件格式整理 整理完成以后变得清晰了许多 4.4 需要修订占位符 需要修订一下模板，用搜索Ctrl + f查询$字符，保证我们定义的占位符是完全挨着的${producer}，如果看到替换关键字没有在一起，需要把中间的内容删除 4.5 拿到.xml模板后处理图片占位 配置图片的替换关键字，搜索image 把binaryData节点里面的字符串删除，改为${image1} 4.6 表格数据渲染配置 如果有表格 &lt;#list list_table as list_table&gt; ${list_table.t1} ${list_table.t2} ${list_table.t3} ${list_table.t4} ${list_table.t5} &lt;/#list&gt; 使用循环语句渲染比较方便。需要在&lt;w:tr&gt;标签的外层添加，如右图所示 &lt;#list list_table as list_table&gt; &lt;/#list&gt; 进行包裹语句块儿。 注意表格里的替换符要用#list里面定义的list_table，例如${list_table.val1} ${list_table.val2} 这里相当于从一个map对象里取出两个值。 所有关键字调整好后，保存，修改文件后缀为.ftl 然后放入项目对应目录下resources。模板编辑完成。 5、开发生成文档接口 程序主要分成3个部分 （1）准备要填充到模板里的数据 （2）把数据根据替换位置关键字打包到map对象里 （3）配置word输出位置，FreeMarker执行word生成 在Impl实现类里注入FreeMarkerConfigurer 12345FreeMarkerConfigurer freeMarkerConfigurer;@Autowiredpublic void setFreeMarkerConfigurer(FreeMarkerConfigurer freeMarkerConfigurer) &#123; this.freeMarkerConfigurer = freeMarkerConfigurer;&#125; 填充模板的数据可以是前端传来的数据，也可以是从数据库获取的数据 打包map，如果有list就put一个map进去，map的key就是前面定义模板时设置的占位符。 图片，传递绝对地址，就可以获取图片可视化的二级支流，BASE64Encoder 开始生成word，需要准备的参数： dataMap 填充模板的数据 ftlName 模板名称 docPath 输出地址+文件名 然后就ok了 下面是完整代码： 1234567891011121314151617181920212223242526272829303132@Override public Result getGeneratedLetters(WeatherInfoLetters weatherInfoLetters) &#123; // word文档输出的目录，上传的图片也在这个目录里 String wordoutPath = &quot;D:/xxx/&quot;; // 测试输出地址 // wordoutPath = &quot;D:\\\\ideaproject\\\\data\\\\word\\\\&quot;; // 配置使用的模板名称 String templetName = &quot;气象信息快报.ftl&quot;; /** * 打包数据到map */ Map&lt;String, Object&gt; templetData = dataPackage(“传入需要打包的数据”); // 生成word文档 // 输出的文档名称 String docName = wordoutPath + &quot;气象信息快报.doc&quot;; // 执行生成 Boolean process = process(templetData, templetName, docName); if (!process) &#123; return Result.queryIsnull(&quot;生成报表文档失败！&quot;); &#125; /** * 下面你可以根据业务做任何事，比如：需要在线预览，可以转出一份pdf提供在线预览 * 把word文档转出pdf文件，pdf文件和word使用同一个输出地址wordoutPath */ String outpdfname = docName.substring(0, docName.lastIndexOf(&quot;.&quot;)); Result&lt;String&gt; pdf = new WordToPDFUtil().wordTransformPdf(docName, outpdfname, false); String pdfname = outpdfname.substring(1 + outpdfname.lastIndexOf(&quot;/&quot;)); return Result.success(docName); &#125; 码字不易，有问题请联系我 vx：yec99867066","categories":[{"name":"Java语言知识","slug":"Java语言知识","permalink":"https://panghuanteng.github.io/categories/Java%E8%AF%AD%E8%A8%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"word文档制作","slug":"word文档制作","permalink":"https://panghuanteng.github.io/tags/word%E6%96%87%E6%A1%A3%E5%88%B6%E4%BD%9C/"}]},{"title":"庞欢腾的自建博客","slug":"庞欢腾的自建博客","date":"2023-02-19T08:54:11.000Z","updated":"2023-03-07T07:32:36.471Z","comments":true,"path":"2023/02/19/庞欢腾的自建博客/","link":"","permalink":"https://panghuanteng.github.io/2023/02/19/%E5%BA%9E%E6%AC%A2%E8%85%BE%E7%9A%84%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"欢迎来到我的博客系统 我将在这里分享我工作中的一些经历。","categories":[],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://panghuanteng.github.io/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"费曼学习法","slug":"费曼学习法","date":"2023-02-17T02:57:56.000Z","updated":"2023-03-06T04:34:54.609Z","comments":true,"path":"2023/02/17/费曼学习法/","link":"","permalink":"https://panghuanteng.github.io/2023/02/17/%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95/","excerpt":"","text":"费曼学习法 前言 “首要的原则是不要欺骗你自己，因为自己是最容易被欺骗的” 以前上学的时候没有网络，获取知识的来源主要是身边的人和学校给买的书。没有科学的学习观念和学习方法，很难做到学习成绩优秀，到了大学才有机会接触网络，开始自己主动的探索知识。然后学习到了费曼学习法，和大家分享交流。 正文 一、费曼学习法（自己的使用方案） 费曼学习法的灵感来源于诺贝尔物理学家获得者理查德·费曼。回到1965年，他因自己的工作获得过诺贝尔奖——量子电动力学。 知识有两种类型： ​ 第一类知识注重了解某个事物的名称。 ​ 第二类知识注重了解某件事物。 理查德·费曼能够理解这两者之间的差异，这也是他成功最重要的原因之一。 费曼学习法可以简化为四个单词： ​ Concept(概念) ​ Teach(教给别人) ​ Review(回顾) ​ Simplify(简化) （1）准备工作 在一张白纸上写自己想要学习的主题，想象把它教给一个9岁的孩子，刚好够理解一些简单的概念和关系。 （2）简单描述 不要使用复杂的词汇和行话，这样会掩盖自己不明白的东西，只是在糊弄我们自己。 自始至终用孩子都可以理解的简单的语言写出一个想法，迫使自己在更深层次上理解这个概念，简化观点之间的关系和联系，清楚自己还不明白的地方。 不是简单的感念，而是要举例子，把这个概念运用进去 （3）找出模糊点 在第一步中，会发现卡壳、忘记的、不能解释和不能联系概念，这样就找到了自己知识的边缘。 然后回归原始的学习资料，重新学习，直到可以用简单的术语解释这一概念。 认定自己知识的界限，会限制可能犯的错误，并且在应用这一知识时，增加成功的机率。 （4）简化（条理化） 检查自己手写的笔记，确保上面没有从原材料中借用任何行话。 将这些笔记用用简单的语言组织成一个流畅的故事。 将这个故事讲出来，尽量使它足够简单，避免混乱。 （5）教给别人 最后把它教授给另一个对这个话题知之甚少的人，确保自己的理解没什么问题。 检测知识最终的途径是你能有能力把它传播给另一个人。 拓展：学生可能会提出“为什么这个公式是正确的？”，所以就需要我们更多的学习相关知识。","categories":[{"name":"学习方法","slug":"学习方法","permalink":"https://panghuanteng.github.io/categories/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"}],"tags":[{"name":"学习方法","slug":"学习方法","permalink":"https://panghuanteng.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"},{"name":"费曼","slug":"费曼","permalink":"https://panghuanteng.github.io/tags/%E8%B4%B9%E6%9B%BC/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-02-17T02:55:24.409Z","updated":"2023-03-07T07:32:12.779Z","comments":true,"path":"2023/02/17/hello-world/","link":"","permalink":"https://panghuanteng.github.io/2023/02/17/hello-world/","excerpt":"","text":"hello 感谢父母将我带来这个世界。 感谢身边所有的人教会我成长。 我希望能给这个世界带来更多的激情。 我们加油！！！( •̀ ω •́ )y","categories":[{"name":"hello","slug":"hello","permalink":"https://panghuanteng.github.io/categories/hello/"}],"tags":[{"name":"hello","slug":"hello","permalink":"https://panghuanteng.github.io/tags/hello/"}]}],"categories":[{"name":"Java语言知识","slug":"Java语言知识","permalink":"https://panghuanteng.github.io/categories/Java%E8%AF%AD%E8%A8%80%E7%9F%A5%E8%AF%86/"},{"name":"学习方法","slug":"学习方法","permalink":"https://panghuanteng.github.io/categories/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"},{"name":"hello","slug":"hello","permalink":"https://panghuanteng.github.io/categories/hello/"}],"tags":[{"name":"word文档制作","slug":"word文档制作","permalink":"https://panghuanteng.github.io/tags/word%E6%96%87%E6%A1%A3%E5%88%B6%E4%BD%9C/"},{"name":"笔记","slug":"笔记","permalink":"https://panghuanteng.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"学习方法","slug":"学习方法","permalink":"https://panghuanteng.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"},{"name":"费曼","slug":"费曼","permalink":"https://panghuanteng.github.io/tags/%E8%B4%B9%E6%9B%BC/"},{"name":"hello","slug":"hello","permalink":"https://panghuanteng.github.io/tags/hello/"}]}