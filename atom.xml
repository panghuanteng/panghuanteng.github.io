<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>庞欢腾的博客</title>
  
  <subtitle>我会在这里发布最新动态</subtitle>
  <link href="https://panghuanteng.github.io/atom.xml" rel="self"/>
  
  <link href="https://panghuanteng.github.io/"/>
  <updated>2023-03-10T09:02:12.848Z</updated>
  <id>https://panghuanteng.github.io/</id>
  
  <author>
    <name>panghuanteng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java基于Spire实现的word文档制作</title>
    <link href="https://panghuanteng.github.io/2023/03/10/Java%E5%9F%BA%E4%BA%8ESpire%E5%AE%9E%E7%8E%B0%E7%9A%84word%E6%96%87%E6%A1%A3%E5%88%B6%E4%BD%9C/"/>
    <id>https://panghuanteng.github.io/2023/03/10/Java%E5%9F%BA%E4%BA%8ESpire%E5%AE%9E%E7%8E%B0%E7%9A%84word%E6%96%87%E6%A1%A3%E5%88%B6%E4%BD%9C/</id>
    <published>2023-03-10T09:00:20.000Z</published>
    <updated>2023-03-10T09:02:12.848Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="Java基于Spire实现的word文档制作-提升10倍效率">          <a href="#Java基于Spire实现的word文档制作-提升10倍效率" class="heading-link"><i class="fas fa-link"></i></a><a href="#Java基于Spire实现的word文档制作-提升10倍效率" class="headerlink" title="Java基于Spire实现的word文档制作(提升10倍效率)"></a><strong>Java基于Spire实现的word文档制作(提升10倍效率)</strong></h1>      <p>功能概述：</p><p>定义一个word模板文件，通过Java程序对模板填充数据，生成出新的word文档。</p>        <h3 id="1、创建maven项目">          <a href="#1、创建maven项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#1、创建maven项目" class="headerlink" title="1、创建maven项目"></a><strong>1、创建maven项目</strong></h3>      <p>推荐使用idea</p>        <h3 id="2、添加pom依赖配置">          <a href="#2、添加pom依赖配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#2、添加pom依赖配置" class="headerlink" title="2、添加pom依赖配置"></a><strong>2、添加pom依赖配置</strong></h3>      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;api&lt;/artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;com.xxxx.server&lt;/groupId&gt;</span><br><span class="line">        &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;artifactId&gt;word-api&lt;/artifactId&gt;</span><br><span class="line">    &lt;packaging&gt;pom&lt;/packaging&gt;</span><br><span class="line">    &lt;name&gt;word-api&lt;/name&gt;</span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;</span><br><span class="line">        &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line">    &lt;repositories&gt;</span><br><span class="line">        &lt;repository&gt;</span><br><span class="line">            &lt;id&gt;com.e-iceblue&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;e-iceblue&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;https://repo.e-iceblue.cn/repository/maven-public/&lt;/url&gt;</span><br><span class="line">        &lt;/repository&gt;</span><br><span class="line">    &lt;/repositories&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;e-iceblue&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spire.doc.free&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;5.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!--&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;e-iceblue&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spire.doc&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;5.4.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;e-iceblue&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spire.pdf.free&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;5.1.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;        </span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></div></figure>        <h3 id="3、接口类开发">          <a href="#3、接口类开发" class="heading-link"><i class="fas fa-link"></i></a><a href="#3、接口类开发" class="headerlink" title="3、接口类开发"></a><strong>3、接口类开发</strong></h3>      <p>生成文档的接口makeWordNimble是一个固定参数的通用接口。</p><p>参数的分类为：</p><p>​            \1.     基础参数 2.文档内部文本类数据 3.文档内部图片类数据</p><p>文档内部数据使用的是Map类型字段接收前端传来的参数，程序根据Map参数的key来定位替换doc模板里的占位符。</p><p>图片数据是通过另一个图片上传接口先上传图片，然后生成文档接口里只需要传递上传到服务器上的图片名称。</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">package com.hxkj.server.controller;</span><br><span class="line"></span><br><span class="line">import com.github.xiaoymin.knife4j.annotations.ApiOperationSupport;</span><br><span class="line">import com.hxkj.server.common.core.result.Result;</span><br><span class="line">import com.hxkj.server.common.core.utils.TddRedisUtil;</span><br><span class="line">import com.hxkj.server.entity.GeneraterWordData;</span><br><span class="line">import com.hxkj.server.service.GeneraterWordService;</span><br><span class="line">import io.swagger.annotations.Api;</span><br><span class="line">import io.swagger.annotations.ApiImplicitParam;</span><br><span class="line">import io.swagger.annotations.ApiImplicitParams;</span><br><span class="line">import io.swagger.annotations.ApiOperation;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 要尊重编程</span><br><span class="line"> *</span><br><span class="line"> * @Author: 庞欢腾</span><br><span class="line"> * @Date: 2022/5/13</span><br><span class="line"> * @Description: data-server</span><br><span class="line"> */</span><br><span class="line">@Api(tags = &quot;生成word文档接口&quot;)</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/generater-word&quot;)</span><br><span class="line">public class GeneraterWordController &#123;</span><br><span class="line"></span><br><span class="line">    GeneraterWordService generaterWordService;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    public void setGeneraterWordService(GeneraterWordService generaterWordService) &#123;</span><br><span class="line">        this.generaterWordService = generaterWordService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ApiOperation(value = &quot;生成word文档接口&quot;, notes = &quot;生成word文档接口&quot;, response = Result.class, httpMethod = &quot;POST&quot;)</span><br><span class="line">    @ApiImplicitParams(&#123;</span><br><span class="line">            @ApiImplicitParam(name = &quot;txt_data&quot;, value = &quot;文本数据&quot;, paramType = &quot;query&quot;, dataType = &quot;Map&quot;, required = true),</span><br><span class="line">            @ApiImplicitParam(name = &quot;image_data&quot;, value = &quot;图像数据&quot;, paramType = &quot;query&quot;, dataType = &quot;Map&quot;, required = true),</span><br><span class="line">            @ApiImplicitParam(name = &quot;inTemplatePathName&quot;, value = &quot;输入模板地址名称&quot;, paramType = &quot;query&quot;, dataType = &quot;String&quot;, required = true),</span><br><span class="line">            @ApiImplicitParam(name = &quot;outputPathName&quot;, value = &quot;输出word文件地址名称&quot;, paramType = &quot;query&quot;, dataType = &quot;String&quot;, required = true)</span><br><span class="line">    &#125;)</span><br><span class="line">    @ApiOperationSupport(author = &quot;庞欢腾&quot;)</span><br><span class="line">    @PostMapping(&quot;/generaterWord&quot;)</span><br><span class="line">    public Result&lt;String&gt; generaterWord(@RequestBody GeneraterWordData generaterWordData) &#123;</span><br><span class="line">        return generaterWordService.baseGeneraterWord(generaterWordData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @ApiOperation(value = &quot;一个非常灵活随意的生成word文档接口&quot;, notes = &quot;生成word文档接口，当使用的模板不是一个的时候，使用这个接口。&quot; +</span><br><span class="line">            &quot;模板名称参数是一个用逗号分割的任意个模板名称&quot;, response = Result.class, httpMethod = &quot;POST&quot;)</span><br><span class="line">    @ApiImplicitParams(&#123;</span><br><span class="line">            @ApiImplicitParam(name = &quot;txt_data&quot;, value = &quot;文本数据&quot;, paramType = &quot;query&quot;, dataType = &quot;Map&quot;, required = true),</span><br><span class="line">            @ApiImplicitParam(name = &quot;image_data&quot;, value = &quot;图像数据&quot;, paramType = &quot;query&quot;, dataType = &quot;Map&quot;, required = true),</span><br><span class="line">            @ApiImplicitParam(name = &quot;inTemplatePathName&quot;, value = &quot;输入模板地址名称,参数是一个用逗号分割的任意个模板名称&quot;, paramType = &quot;query&quot;, dataType = &quot;String&quot;, required = true),</span><br><span class="line">            @ApiImplicitParam(name = &quot;outputPathName&quot;, value = &quot;输出word文件地址名称&quot;, paramType = &quot;query&quot;, dataType = &quot;String&quot;, required = true)</span><br><span class="line">    &#125;)</span><br><span class="line">    @ApiOperationSupport(author = &quot;庞欢腾&quot;)</span><br><span class="line">    @PostMapping(&quot;/generaterWordNimble&quot;)</span><br><span class="line">    public Result&lt;String&gt; generaterWordNimble(@RequestBody GeneraterWordData generaterWordData) &#123;</span><br><span class="line">        return generaterWordService.baseGeneraterWordNimble(generaterWordData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @ApiOperation(value = &quot;通用文档生成接口&quot;, notes = &quot;2022年08月04日 生成word文档接口，当使用的模板不是一个的时候，使用这个接口。&quot; +</span><br><span class="line">            &quot;模板名称参数是一个用逗号分割的任意个模板名称&quot;, response = Result.class, httpMethod = &quot;POST&quot;)</span><br><span class="line">    @ApiOperationSupport(author = &quot;庞欢腾&quot;)</span><br><span class="line">    @PostMapping(&quot;/makeWordNimble&quot;)</span><br><span class="line">    public Result&lt;String&gt; makeWordNimble(@RequestBody GeneraterWordData generaterWordData) &#123;</span><br><span class="line">        return generaterWordService.baseMakeWordNimble(generaterWordData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ApiOperation(value = &quot;通用文档生成接口&quot;, notes = &quot;2022-08-17 生成word文档接口，当使用的模板不是一个的时候，使用这个接口。&quot; +</span><br><span class="line">            &quot;模板名称参数是一个用逗号分割的任意个模板名称，（第二代接口，当图片数据不在同一个目录的时候，图片名称参数前面要指定子目录，例如：tdd配置的路径+子目录/图片名称.png）&quot;, response = Result.class, httpMethod = &quot;POST&quot;)</span><br><span class="line">    @ApiOperationSupport(author = &quot;庞欢腾&quot;)</span><br><span class="line">    @PostMapping(&quot;/makeWordNimblePng&quot;)</span><br><span class="line">    public Result&lt;String&gt; makeWordNimblePng(@RequestBody GeneraterWordData generaterWordData) &#123;</span><br><span class="line">        return generaterWordService.baseMakeWordNimblePng(generaterWordData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 测试用例</span><br><span class="line">     */</span><br><span class="line">    /*public static void main(String[] args) &#123;</span><br><span class="line">        GeneraterWord generaterWord = new GeneraterWordImpl();</span><br><span class="line">        String inTemplatePathName = &quot;E:\\a工作文件\\郑州\\2022\u200E年\u200E\\精细化平台开发工作\\预警信息制作模板\\开发模板\\郑州市气象台预警模板.doc&quot;;</span><br><span class="line">        Map&lt;String, String&gt; data = new HashMap&lt;&gt;();</span><br><span class="line">        // data.put(&quot;name&quot;, &quot;郑州&quot;);</span><br><span class="line">        data.put(&quot;td0table0&quot;, &quot;31日09时t_31日10时t_31日11时t_31日12时t_31日13时t_31日14时t_31日15时t_31日16时t_31日17时t_31日18时t_31日19时t_31日20时&quot;);</span><br><span class="line">        data.put(&quot;td1table0&quot;, &quot;31日09时t_31日10时t_31日11时t_31日12时t_31日13时t_31日14时t_31日15时t_31日16时t_31日17时t_31日18时t_31日19时t_31日20时&quot;);</span><br><span class="line">        data.put(&quot;td2table0&quot;, &quot;31日09时t_31日10时t_31日11时t_31日12时t_31日13时t_31日14时t_31日15时t_31日16时t_31日17时t_31日18时t_31日19时t_31日20时&quot;);</span><br><span class="line"></span><br><span class="line">        //加载示例文档</span><br><span class="line">        Document document = new Document();</span><br><span class="line">        // &quot;C:\\Users\\Administrator\\Desktop\\input.docx&quot;</span><br><span class="line">        document.loadFromFile(inTemplatePathName);</span><br><span class="line">        // 文本</span><br><span class="line">        // generaterWord.replaceText(data, document);</span><br><span class="line"></span><br><span class="line">        //表格</span><br><span class="line">        generaterWord.replaceTable(data, document);</span><br><span class="line"></span><br><span class="line">        //保存文档</span><br><span class="line">        document.saveToFile(&quot;E:\\a工作文件\\郑州\\2022\u200E年\u200E\\精细化平台开发工作\\预警信息制作模板\\开发模板\\ReplaceAllMatchedText.docx&quot;, FileFormat.Docx_2013);</span><br><span class="line"></span><br><span class="line">    &#125;*/</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 测试循环生成文档功能</span><br><span class="line">     * @param args</span><br><span class="line">     */</span><br><span class="line">    /*public static void main(String[] args) &#123;</span><br><span class="line">        String root = &quot;D:\\data\\word\\制作文档\\&quot;;</span><br><span class="line">        String out = root + &quot;生成后的文件.docx&quot;;</span><br><span class="line">        Map&lt;String, String&gt;[] txt_data = new Map[2];</span><br><span class="line">        txt_data[0] = new HashMap&lt;&gt;();</span><br><span class="line">        txt_data[0].put(&quot;name&quot;, &quot;这是第一个文本&quot;);</span><br><span class="line">        txt_data[1] = new HashMap&lt;&gt;();</span><br><span class="line">        txt_data[1].put(&quot;name&quot;, &quot;这是第二个文本&quot;);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt;[] image_data = new Map[2];</span><br><span class="line">        image_data[0] = new HashMap&lt;&gt;();</span><br><span class="line">        image_data[0].put(&quot;img2&quot;, root + &quot;img1.png&quot;);</span><br><span class="line">        image_data[1] = new HashMap&lt;&gt;();</span><br><span class="line">        image_data[1].put(&quot;img2&quot;, root + &quot;img3.png&quot;);</span><br><span class="line"></span><br><span class="line">        GeneraterWord generaterWord = new GeneraterWordImpl();</span><br><span class="line">        Document document = generaterWord.generaterWord(root + &quot;气象信息快报_近小时降水量2.doc&quot;);</span><br><span class="line">        generaterWord.loopReplaceWord(txt_data, image_data, document, out);</span><br><span class="line"></span><br><span class="line">    &#125;*/</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>核心实现类</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * 图片没用自动拼接当前日期</span><br><span class="line">     * @param generaterWordData</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private GeneraterWordData StitchingPathNoPng(GeneraterWordData generaterWordData) &#123;</span><br><span class="line">        String mouth = DateUtil.getMouth();</span><br><span class="line">        /**</span><br><span class="line">         * 1.读取配置路径</span><br><span class="line">         */</span><br><span class="line">        String area = generaterWordData.getArea();</span><br><span class="line">        String dataType = generaterWordData.getDataType();</span><br><span class="line">        TDealdataDict tdd = tddRedisUtil.getTdd(area, dataType);</span><br><span class="line">        if (tdd == null) &#123;</span><br><span class="line">            log.info(&quot;tdd配置未找到！&quot; + area + &quot;  &quot; + dataType);</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        String orgPath = tdd.getOrgPath();</span><br><span class="line">        if (!(orgPath.endsWith(&quot;/&quot;) || orgPath.endsWith(&quot;\\&quot;))) &#123;</span><br><span class="line">            orgPath += &quot;/&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 2.图片数据需要拼接前路径</span><br><span class="line">         */</span><br><span class="line">        Map&lt;String, String&gt; image_data = generaterWordData.getImage_data();</span><br><span class="line">        for (Map.Entry&lt;String, String&gt; entry : image_data.entrySet()) &#123;</span><br><span class="line">            StringBuilder imgname = new StringBuilder();</span><br><span class="line">            String value = entry.getValue();</span><br><span class="line">            if (value.contains(&quot;,_&quot;)) &#123;</span><br><span class="line">                String[] split = value.split(&quot;,_&quot;);</span><br><span class="line">                for (String s : split) &#123;</span><br><span class="line">                    imgname.append(orgPath).append(s).append(&quot;,_&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                value = imgname.substring(0, imgname.length() - 2);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                value = orgPath + value;</span><br><span class="line">            &#125;</span><br><span class="line">            entry.setValue(value);</span><br><span class="line">        &#125;</span><br><span class="line">        generaterWordData.setImage_data(image_data);</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 3.输出文档需要拼接前路径</span><br><span class="line">         */</span><br><span class="line">        String outputPathName = generaterWordData.getOutputPathName();</span><br><span class="line">        generaterWordData.setOutputPathName(orgPath + mouth + &quot;/&quot; + outputPathName);</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 4.模板名称需要拼接前路径</span><br><span class="line">         */</span><br><span class="line">        String templateName = generaterWordData.getTemplateName();</span><br><span class="line">        // 模板数据需要拼接前路径</span><br><span class="line">        String[] templates = templateName.split(&quot;,|，&quot;);</span><br><span class="line">        StringBuilder name = new StringBuilder();</span><br><span class="line">        for (String template : templates) &#123;</span><br><span class="line">            name.append(orgPath).append(template).append(&quot;,&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        templateName = name.substring(0, name.length() - 1);</span><br><span class="line">        generaterWordData.setTemplateName(templateName);</span><br><span class="line"></span><br><span class="line">        return generaterWordData;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>        <h3 id="4、制作模板文件">          <a href="#4、制作模板文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#4、制作模板文件" class="headerlink" title="4、制作模板文件"></a><strong>4、制作模板文件</strong></h3>      <p>注意：word模板文件必须是.doc为后缀的文档</p><p>新建一个doc文档，直接在文档里编写模板</p><p>①编辑模板</p><p>一、文本占位符用“#”包裹，例如：#data#</p><p>二、图片站位就是，在word里添加一张图片，图片的名称就是接口里传参的key值</p><p>例如：图片名称是img1.png</p><p>image_data: {</p><p>​    “img1”:”气象预警icon_暴雪-橙.png”</p><p>}</p><p><img src="/2023/03/10/Java%E5%9F%BA%E4%BA%8ESpire%E5%AE%9E%E7%8E%B0%E7%9A%84word%E6%96%87%E6%A1%A3%E5%88%B6%E4%BD%9C/AgAABTYvFBQhDOqevK9HoYVpY-8YNRGQ.png" alt="img"></p><p>制作好doc模板文件后，将模板文件上传到服务器指定目录</p><p>在数据库里需要定义一个路径配置字典表，用来存储word文档的生成输出路径和保存模板文件路径</p>        <h3 id="5、文档制作需求分类">          <a href="#5、文档制作需求分类" class="heading-link"><i class="fas fa-link"></i></a><a href="#5、文档制作需求分类" class="headerlink" title="5、文档制作需求分类"></a><strong>5、文档制作需求分类</strong></h3>      <p>实际需求中往往遇到的需求是很复杂的</p><p>S类文档制作是一张完整的模板文件，填充固定个数的替换符号，生成出新的文档。</p><p>SS类文档制作是多段内容根据客户选择生成出结果文档，比如客户想要文档的A、B部分，那么生成出来的文档就不包含C部分。</p><p>SSS类文档制作是文档切片后，其中一片内容可能根据数据需要循环展示，例如B分片，后台数据有3条，这三条数据需要按照模板B的格式，循环渲染出来，文档输出的结果就是ABBBC</p><p><img src="/2023/03/10/Java%E5%9F%BA%E4%BA%8ESpire%E5%AE%9E%E7%8E%B0%E7%9A%84word%E6%96%87%E6%A1%A3%E5%88%B6%E4%BD%9C/AgAABTYvFBQIG0FrsuBLgbQhnW5bC4VF.png" alt="img"></p>        <h3 id="6、项目应用场景">          <a href="#6、项目应用场景" class="heading-link"><i class="fas fa-link"></i></a><a href="#6、项目应用场景" class="headerlink" title="6、项目应用场景"></a><strong>6、项目应用场景</strong></h3>      <p><img src="/2023/03/10/Java%E5%9F%BA%E4%BA%8ESpire%E5%AE%9E%E7%8E%B0%E7%9A%84word%E6%96%87%E6%A1%A3%E5%88%B6%E4%BD%9C/AgAABTYvFBRYMEnTumBDdba9kGLg-A6K.png" alt="img"></p><p>码字不易，有问题请联系我 vx：yce99867066</p>]]></content>
    
    
      
      
    <summary type="html">
        &lt;h1 id=&quot;Java基于Spire实现的word文档制作-提升10倍效率&quot;&gt;
          &lt;a href=&quot;#Java基于Spire实现的word文档制作-提升10倍效率&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Java使用freemarker制作word文档完整笔记</title>
    <link href="https://panghuanteng.github.io/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/"/>
    <id>https://panghuanteng.github.io/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/</id>
    <published>2023-03-07T08:56:25.000Z</published>
    <updated>2023-03-07T09:49:52.116Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="freemarker模板引擎">          <a href="#freemarker模板引擎" class="heading-link"><i class="fas fa-link"></i></a><a href="#freemarker模板引擎" class="headerlink" title="freemarker模板引擎"></a>freemarker模板引擎</h1>              <h3 id="1、创建一个maven项目">          <a href="#1、创建一个maven项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#1、创建一个maven项目" class="headerlink" title="1、创建一个maven项目"></a><strong>1、创建一个maven项目</strong></h3>              <h3 id="2、添加pom-xml依赖">          <a href="#2、添加pom-xml依赖" class="heading-link"><i class="fas fa-link"></i></a><a href="#2、添加pom-xml依赖" class="headerlink" title="2、添加pom.xml依赖"></a><strong>2、添加pom.xml依赖</strong></h3>      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.freemarker&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;freemarker&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></div></figure>        <h3 id="3、添加配置文件">          <a href="#3、添加配置文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#3、添加配置文件" class="headerlink" title="3、添加配置文件"></a><strong>3、添加配置文件</strong></h3>              <h4 id="方法1（推荐这种配置）：">          <a href="#方法1（推荐这种配置）：" class="heading-link"><i class="fas fa-link"></i></a><a href="#方法1（推荐这种配置）：" class="headerlink" title="方法1（推荐这种配置）："></a><strong>方法1（推荐这种配置）：</strong></h4>      <p>也可以在bootstrp.yml配置文件里添加配置</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">freemarker:</span><br><span class="line">  suffix: .ftl</span><br><span class="line">  template-loader-path: classpath:/staticftl</span><br></pre></td></tr></table></div></figure><p>注意：需要注意缩进</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBRIVAveHcBCLZxndZTQI5pA.png?w=865&h=794" style alt="img"></p>        <h4 id="方法2：">          <a href="#方法2：" class="heading-link"><i class="fas fa-link"></i></a><a href="#方法2：" class="headerlink" title="方法2："></a><strong>方法2：</strong></h4>      <p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBT7gSH4RbpH8qCwbO1NoQPP.png?w=865&h=324" style alt="img"></p><p>setTemplateLoaderPath 参数是指定我们定义好的模板存放目录</p><p>代码：</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package com.hxkj.server.api.haiyangserver.config;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line">/**</span><br><span class="line"> * @Author pht</span><br><span class="line"> * @Description word模板配置</span><br><span class="line"> * @Date 2021/6/24</span><br><span class="line"> **/</span><br><span class="line">@Configuration</span><br><span class="line">public class ApplicationConfig &#123;</span><br><span class="line">    @Bean(name = &quot;freeMarkerConfigurer&quot;)</span><br><span class="line">    public FreeMarkerConfigurer freeMarkerConfigurer() &#123;</span><br><span class="line">        FreeMarkerConfigurer configurer = new FreeMarkerConfigurer();</span><br><span class="line">        configurer.setDefaultEncoding(&quot;UTF-8&quot;);</span><br><span class="line">        configurer.setTemplateLoaderPath(&quot;classpath:/staticftl&quot;);</span><br><span class="line">        Map&lt;String, Object&gt; variables = new HashMap&lt;&gt;();</span><br><span class="line">        variables.put(&quot;xml_escape&quot;, &quot;fmXmlEscape&quot;);</span><br><span class="line">        configurer.setFreemarkerVariables(variables);</span><br><span class="line">        return configurer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h3 id="4、模板制作">          <a href="#4、模板制作" class="heading-link"><i class="fas fa-link"></i></a><a href="#4、模板制作" class="headerlink" title="4、模板制作"></a><strong>4、模板制作</strong></h3>              <h4 id="4-1-拿到原始模板文件">          <a href="#4-1-拿到原始模板文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-1-拿到原始模板文件" class="headerlink" title="4.1 拿到原始模板文件"></a><strong>4.1 拿到原始模板文件</strong></h4>      <p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBQkFAyOFdZNyqkDG1tuOgMb.png?w=865&h=740" style alt="img"></p><p>上图是一个word文件，框选的区域内容是需要程序动态填充的。然后需要整理模板格式，根据模板需要定义替换符关键字。</p>        <h4 id="4-2-建立替换占位符号">          <a href="#4-2-建立替换占位符号" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-2-建立替换占位符号" class="headerlink" title="4.2 建立替换占位符号"></a><strong>4.2 建立替换占位符号</strong></h4>      <p>创建一个txt文件</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">制作人</span><br><span class="line">$&#123;producer&#125;：悟空</span><br><span class="line"></span><br><span class="line">制作日期</span><br><span class="line">$&#123;cdate&#125;:2021年11月22日</span><br><span class="line"></span><br><span class="line">分析区域</span><br><span class="line">$&#123;area1&#125;:河北省(市)</span><br><span class="line">$&#123;area2&#125;:东海海域</span><br><span class="line"></span><br><span class="line">分析月份</span><br><span class="line">$&#123;month&#125;:7—8</span><br></pre></td></tr></table></div></figure><p>把对应需要动态替换值的位置填充上关键字，并把黄色的标注去掉</p><p><strong>如果有图片</strong>，需要把图片插入并调整好位置。图片的替换关键字在转换成xml后做。</p><p>替换完成word文件里的占位符后，结果如下</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBSfwRzN0AtDI7P4FVIlnIWO.png?w=865&h=717" style alt="img"></p><p>模板文档中${}是占位符，即生成Word文档时占位符会被真实的数据替换。例如${name}在生成文档时会被name这个属性的值替换 ，${userObj.name}在生成文档时会被userObj这个对象的name属性的值替换。</p>        <h4 id="4-3-将-doc文档另存为-xml文件">          <a href="#4-3-将-doc文档另存为-xml文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-3-将-doc文档另存为-xml文件" class="headerlink" title="4.3 将.doc文档另存为.xml文件"></a><strong>4.3 将.doc文档另存为.xml文件</strong></h4>      <p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBSZJ-9cPiRNEY_NWY_nZSQp.png?w=915&h=798" style alt="img"></p><p>把word文档转成xml文件</p><p>另存为，选择xml格式</p><p>使用notepad++打开xml模板</p><p>首先格式化，需要添加xml插件</p><p>注意：另存为时选择Word2003XML文档(*.xml)</p><p>使用notepad++编辑工具打开这个xml文件</p><p>你会发现里面都是一些看不懂的乱码</p><p>此时不要慌</p><p>打开效果：</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBQ16sIv9CtMloLviRBpacUd.png?w=1916&h=884" style alt="img"></p><p>安装一个插件</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBS9tfeFdOpJ8qTY9lKX6r-0.png?w=1229&h=886" style alt="img"></p><p>使用这个插件对xml文件格式整理</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBRsLqwGRFFBOZd71qEy4kV8.png?w=903&h=822" style alt="img"></p><p>整理完成以后变得清晰了许多</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBTIPoU52O5Bl5h-yz1ahcu-.png?w=1878&h=866" style alt="img"></p>        <h4 id="4-4-需要修订占位符">          <a href="#4-4-需要修订占位符" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-4-需要修订占位符" class="headerlink" title="4.4 需要修订占位符"></a><strong>4.4 需要修订占位符</strong></h4>      <p>需要修订一下模板，用搜索Ctrl + f查询$字符，保证我们定义的占位符是完全挨着的${producer}，如果看到替换关键字没有在一起，需要把中间的内容删除</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBQpopEt-C1OHppZ8DD8qUbb.png?w=865&h=399" style alt="img"></p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBQ_eP9d6c9BJ6nTzbHfb9mC.png?w=865&h=399" style alt="img"></p><h4 id><a href="#" class="headerlink" title></a></h4>        <h4 id="4-5-拿到-xml模板后处理图片占位">          <a href="#4-5-拿到-xml模板后处理图片占位" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-5-拿到-xml模板后处理图片占位" class="headerlink" title="4.5 拿到.xml模板后处理图片占位"></a><strong>4.5 拿到.xml模板后处理图片占位</strong></h4>      <p>配置图片的替换关键字，搜索image</p><p>把binaryData节点里面的字符串删除，改为${image1}</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBTMzSB_tmlOOLDVX3R1NS9d.png?w=865&h=399" style alt="img"></p>        <h4 id="4-6-表格数据渲染配置">          <a href="#4-6-表格数据渲染配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-6-表格数据渲染配置" class="headerlink" title="4.6 表格数据渲染配置"></a><strong>4.6 表格数据渲染配置</strong></h4>      <p>如果有表格</p><p>&lt;#list list_table as list_table&gt;</p><p>${list_table.t1}     ${list_table.t2}     ${list_table.t3}     ${list_table.t4}     ${list_table.t5} </p><p>&lt;/#list&gt;</p><p>使用循环语句渲染比较方便。需要在&lt;w:tr&gt;标签的外层添加，如右图所示</p><p>&lt;#list list_table as list_table&gt;</p><p>&lt;/#list&gt;</p><p>进行包裹语句块儿。</p><p>注意表格里的替换符要用#list里面定义的list_table，例如${list_table.val1}</p><p>${list_table.val2}</p><p>这里相当于从一个map对象里取出两个值。</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBQg6gRorT9AJbQTETcqEtbD.png?w=1060&h=805" style alt="img"></p><p>所有关键字调整好后，保存，修改文件后缀为.ftl</p><p>然后放入项目对应目录下resources。模板编辑完成。</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBSIXFLfNApHX4y8jCXQAcdW.png?w=1218&h=910" style alt="img"></p>        <h3 id="5、开发生成文档接口">          <a href="#5、开发生成文档接口" class="heading-link"><i class="fas fa-link"></i></a><a href="#5、开发生成文档接口" class="headerlink" title="5、开发生成文档接口"></a><strong>5、开发生成文档接口</strong></h3>      <p>程序主要分成3个部分</p><p>（1）准备要填充到模板里的数据</p><p>（2）把数据根据替换位置关键字打包到map对象里</p><p>（3）配置word输出位置，FreeMarker执行word生成</p><p>在Impl实现类里注入FreeMarkerConfigurer</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FreeMarkerConfigurer freeMarkerConfigurer;</span><br><span class="line">@Autowired</span><br><span class="line">public void setFreeMarkerConfigurer(FreeMarkerConfigurer freeMarkerConfigurer) &#123;</span><br><span class="line">    this.freeMarkerConfigurer = freeMarkerConfigurer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>填充模板的数据可以是前端传来的数据，也可以是从数据库获取的数据</p><p>打包map，如果有list就put一个map进去，map的key就是前面定义模板时设置的占位符。</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBTusUWVHKNHWJ0FpMPCyUtJ.png?w=865&h=319" style alt="img"></p><p>图片，传递绝对地址，就可以获取图片可视化的二级支流，BASE64Encoder</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBSBuo3A8e1K_6tsBq8f8991.png?w=865&h=609" style alt="img"></p><p>开始生成word，需要准备的参数：</p><p>  dataMap 填充模板的数据</p><p>  ftlName 模板名称</p><p>  docPath 输出地址+文件名</p><p><img src="/2023/03/07/Java%E4%BD%BF%E7%94%A8freemarker%E5%88%B6%E4%BD%9Cword%E6%96%87%E6%A1%A3%E5%AE%8C%E6%95%B4%E7%AC%94%E8%AE%B0/AgAABTYvFBQwDcOUUWFOc4oE6AfQWBXJ.png?w=865&h=326" style alt="img"></p><p>然后就ok了</p><p>下面是完整代码：</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">    public Result getGeneratedLetters(WeatherInfoLetters weatherInfoLetters) &#123;</span><br><span class="line">        // word文档输出的目录，上传的图片也在这个目录里</span><br><span class="line">        String wordoutPath = &quot;D:/xxx/&quot;;</span><br><span class="line">        // 测试输出地址</span><br><span class="line">        // wordoutPath = &quot;D:\\ideaproject\\data\\word\\&quot;;</span><br><span class="line">        // 配置使用的模板名称</span><br><span class="line">        String templetName = &quot;气象信息快报.ftl&quot;;</span><br><span class="line">        /**</span><br><span class="line">         * 打包数据到map</span><br><span class="line">         */</span><br><span class="line">        Map&lt;String, Object&gt; templetData = dataPackage(“传入需要打包的数据”);</span><br><span class="line">        // 生成word文档</span><br><span class="line">        // 输出的文档名称</span><br><span class="line">        String docName = wordoutPath + &quot;气象信息快报.doc&quot;;</span><br><span class="line">        // 执行生成</span><br><span class="line">        Boolean process = process(templetData, templetName, docName);</span><br><span class="line">        if (!process) &#123;</span><br><span class="line">            return Result.queryIsnull(&quot;生成报表文档失败！&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * 下面你可以根据业务做任何事，比如：需要在线预览，可以转出一份pdf提供在线预览</span><br><span class="line">         * 把word文档转出pdf文件，pdf文件和word使用同一个输出地址wordoutPath</span><br><span class="line">         */</span><br><span class="line">        String outpdfname = docName.substring(0, docName.lastIndexOf(&quot;.&quot;));</span><br><span class="line">        Result&lt;String&gt; pdf = new WordToPDFUtil().wordTransformPdf(docName, outpdfname, false);</span><br><span class="line">        String pdfname = outpdfname.substring(1 + outpdfname.lastIndexOf(&quot;/&quot;));</span><br><span class="line"></span><br><span class="line">        return Result.success(docName);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure><p>码字不易，有问题请联系我 vx：yce99867066</p>]]></content>
    
    
      
      
    <summary type="html">
        &lt;h1 id=&quot;freemarker模板引擎&quot;&gt;
          &lt;a href=&quot;#freemarker模板引擎&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#freemark</summary>
      
    
    
    
    <category term="Java语言知识" scheme="https://panghuanteng.github.io/categories/Java%E8%AF%AD%E8%A8%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="word文档制作" scheme="https://panghuanteng.github.io/tags/word%E6%96%87%E6%A1%A3%E5%88%B6%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>庞欢腾的自建博客</title>
    <link href="https://panghuanteng.github.io/2023/02/19/%E5%BA%9E%E6%AC%A2%E8%85%BE%E7%9A%84%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://panghuanteng.github.io/2023/02/19/%E5%BA%9E%E6%AC%A2%E8%85%BE%E7%9A%84%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-02-19T08:54:11.000Z</published>
    <updated>2023-03-07T07:32:36.471Z</updated>
    
    <content type="html"><![CDATA[        <h3 id="欢迎来到我的博客系统">          <a href="#欢迎来到我的博客系统" class="heading-link"><i class="fas fa-link"></i></a><a href="#欢迎来到我的博客系统" class="headerlink" title="欢迎来到我的博客系统"></a>欢迎来到我的博客系统</h3>      <p>我将在这里分享我工作中的一些经历。</p>]]></content>
    
    
      
      
    <summary type="html">
        &lt;h3 id=&quot;欢迎来到我的博客系统&quot;&gt;
          &lt;a href=&quot;#欢迎来到我的博客系统&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#欢迎来到我的博客系统&quot; clas</summary>
      
    
    
    
    
    <category term="笔记" scheme="https://panghuanteng.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>费曼学习法</title>
    <link href="https://panghuanteng.github.io/2023/02/17/%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95/"/>
    <id>https://panghuanteng.github.io/2023/02/17/%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95/</id>
    <published>2023-02-17T02:57:56.000Z</published>
    <updated>2023-03-06T04:34:54.609Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="费曼学习法">          <a href="#费曼学习法" class="heading-link"><i class="fas fa-link"></i></a><a href="#费曼学习法" class="headerlink" title="费曼学习法"></a>费曼学习法</h1>              <h3 id="前言">          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a><a href="#前言" class="headerlink" title="前言"></a>前言</h3>      <p>“首要的原则是不要欺骗你自己，因为自己是最容易被欺骗的”</p><p>以前上学的时候没有网络，获取知识的来源主要是身边的人和学校给买的书。没有科学的学习观念和学习方法，很难做到学习成绩优秀，到了大学才有机会接触网络，开始自己主动的探索知识。然后学习到了费曼学习法，和大家分享交流。</p>        <h3 id="正文">          <a href="#正文" class="heading-link"><i class="fas fa-link"></i></a><a href="#正文" class="headerlink" title="正文"></a>正文</h3>              <h4 id="一、费曼学习法（自己的使用方案）">          <a href="#一、费曼学习法（自己的使用方案）" class="heading-link"><i class="fas fa-link"></i></a><a href="#一、费曼学习法（自己的使用方案）" class="headerlink" title="一、费曼学习法（自己的使用方案）"></a>一、费曼学习法（自己的使用方案）</h4>      <p>费曼学习法的灵感来源于诺贝尔物理学家获得者理查德·费曼。回到1965年，他因自己的工作获得过诺贝尔奖——量子电动力学。</p><p>知识有两种类型：</p><p>​        第一类知识注重了解某个事物的名称。</p><p>​        第二类知识注重了解某件事物。</p><p>理查德·费曼能够理解这两者之间的差异，这也是他成功最重要的原因之一。</p><p>费曼学习法可以简化为四个单词：</p><p>​        Concept(概念)</p><p>​        Teach(教给别人)</p><p>​        Review(回顾)</p><p>​        Simplify(简化)</p>        <h4 id="（1）准备工作">          <a href="#（1）准备工作" class="heading-link"><i class="fas fa-link"></i></a><a href="#（1）准备工作" class="headerlink" title="（1）准备工作"></a>（1）准备工作</h4>      <p>在一张白纸上写自己想要学习的主题，想象把它教给一个9岁的孩子，刚好够理解一些简单的概念和关系。</p>        <h4 id="（2）简单描述">          <a href="#（2）简单描述" class="heading-link"><i class="fas fa-link"></i></a><a href="#（2）简单描述" class="headerlink" title="（2）简单描述"></a>（2）简单描述</h4>      <p>不要使用复杂的词汇和行话，这样会掩盖自己不明白的东西，只是在糊弄我们自己。</p><p>自始至终用孩子都可以理解的简单的语言写出一个想法，迫使自己在更深层次上理解这个概念，简化观点之间的关系和联系，清楚自己还不明白的地方。</p><p>不是简单的感念，而是要举例子，把这个概念运用进去</p>        <h4 id="（3）找出模糊点">          <a href="#（3）找出模糊点" class="heading-link"><i class="fas fa-link"></i></a><a href="#（3）找出模糊点" class="headerlink" title="（3）找出模糊点"></a>（3）找出模糊点</h4>      <p>在第一步中，会发现卡壳、忘记的、不能解释和不能联系概念，这样就找到了自己知识的边缘。</p><p>然后回归原始的学习资料，重新学习，直到可以用简单的术语解释这一概念。</p><p>认定自己知识的界限，会限制可能犯的错误，并且在应用这一知识时，增加成功的机率。</p>        <h4 id="（4）简化（条理化）">          <a href="#（4）简化（条理化）" class="heading-link"><i class="fas fa-link"></i></a><a href="#（4）简化（条理化）" class="headerlink" title="（4）简化（条理化）"></a>（4）简化（条理化）</h4>      <p>检查自己手写的笔记，确保上面没有从原材料中借用任何行话。</p><p>将这些笔记用用简单的语言组织成一个流畅的故事。</p><p>将这个故事讲出来，尽量使它足够简单，避免混乱。</p>        <h4 id="（5）教给别人">          <a href="#（5）教给别人" class="heading-link"><i class="fas fa-link"></i></a><a href="#（5）教给别人" class="headerlink" title="（5）教给别人"></a>（5）教给别人</h4>      <p>最后把它教授给另一个对这个话题知之甚少的人，确保自己的理解没什么问题。</p><p>检测知识最终的途径是你能有能力把它传播给另一个人。</p><p>拓展：学生可能会提出“为什么这个公式是正确的？”，所以就需要我们更多的学习相关知识。</p>]]></content>
    
    
      
      
    <summary type="html">
        &lt;h1 id=&quot;费曼学习法&quot;&gt;
          &lt;a href=&quot;#费曼学习法&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#费曼学习法&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="学习方法" scheme="https://panghuanteng.github.io/categories/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
    <category term="学习方法" scheme="https://panghuanteng.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    <category term="费曼" scheme="https://panghuanteng.github.io/tags/%E8%B4%B9%E6%9B%BC/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://panghuanteng.github.io/2023/02/17/hello-world/"/>
    <id>https://panghuanteng.github.io/2023/02/17/hello-world/</id>
    <published>2023-02-17T02:55:24.409Z</published>
    <updated>2023-03-07T07:32:12.779Z</updated>
    
    <content type="html"><![CDATA[<p>hello</p><p>感谢父母将我带来这个世界。</p><p>感谢身边所有的人教会我成长。</p><p>我希望能给这个世界带来更多的激情。</p><p>我们加油！！！( •̀ ω •́ )y</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;hello&lt;/p&gt;
&lt;p&gt;感谢父母将我带来这个世界。&lt;/p&gt;
&lt;p&gt;感谢身边所有的人教会我成长。&lt;/p&gt;
&lt;p&gt;我希望能给这个世界带来更多的激情。&lt;/p&gt;
&lt;p&gt;我们加油！！！( •̀ ω •́ )y&lt;/p&gt;
</summary>
      
    
    
    
    <category term="hello" scheme="https://panghuanteng.github.io/categories/hello/"/>
    
    
    <category term="hello" scheme="https://panghuanteng.github.io/tags/hello/"/>
    
  </entry>
  
</feed>
